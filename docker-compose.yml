version: "3.9"

services:

  database:
    container_name: database
    image: mysql:8.0.33
    restart: always
    env_file:
      - .env                     # Provides DATABASE_USERNAME / DATABASE_PASSWORD etc.
    environment:
      MYSQL_DATABASE: githubscreenshotsdatabase
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      MYSQL_PORT: 3307
    volumes:
      - ./db:/var/lib/mysql
    ports:
      - "3307:3306"              # Host:Container
    healthcheck:
      # Succeeds when MySQL is ready to accept connections
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${DATABASE_USERNAME:-root} -p${DATABASE_PASSWORD:-password} --silent" ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    networks:
      - githubScreenshotNetwork

  githubscreenshotmailer:
    image: "githubscreenshotmailer:latest"
    build:
      context: .
      dockerfile: Dockerfile
    container_name: githubscreenshotmailer
    restart: on-failure
    env_file:
      - .env
    ports:
      - "1926:1926"
    environment:
      # Spring Boot server port (matches application.yml: server.port: 1926)
      - server.port=1926

      # --- Database wiring (matches application.yml keys) ---
      - GITHUB_SCREENSHOT_DB_IP=database     # use service name inside the Docker network
      - GITHUB_SCREENSHOT_DB_PORT=3307       # internal MySQL port
      - DATABASE_USERNAME=${DATABASE_USERNAME:-root}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-password}

      # Optional: if you prefer overriding the full JDBC URL directly
      - spring.datasource.url=jdbc:mysql://host.docker.internal:3307/githubscreenshotsdatabase

      # --- App-specific options from application.yml ---
      - SCREENSHOT_DIR=/data/screenshots
      - SELENIUM_HEADLESS=${SELENIUM_HEADLESS:-true}
      - GITHUB_LOGIN_EMAIL=${GITHUB_LOGIN_EMAIL:-github-login-email}
      - GITHUB_LOGIN_PASSWORD=${GITHUB_LOGIN_PASSWORD:-github-login-password}
      - GITHUB_MOBILE_TIMEOUT_SECONDS=${GITHUB_MOBILE_TIMEOUT_SECONDS:-360}
      - GITHUB_MOBILE_POLL_SECONDS=${GITHUB_MOBILE_POLL_SECONDS:-2}

      # --- Mail settings (Gmail SMTP) ---
      - GMAIL_ADDRESS=${GMAIL_ADDRESS:-your_gmail_address@gmail.com}
      - GMAIL_PASSWORD=${GMAIL_PASSWORD:-your_16_char_app_password}
    volumes:
      - ./screenshots:/data/screenshots     # persist screenshots on host
      - ./logs:/app/logs                    # optional: persist logs
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:1926/actuator/health | grep -q '\"status\":\"UP\"' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
    networks:
      - githubScreenshotNetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - githubscreenshotmailer
    networks:
      - githubScreenshotNetwork

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - githubScreenshotNetwork

networks:
  githubScreenshotNetwork:
    driver: bridge
